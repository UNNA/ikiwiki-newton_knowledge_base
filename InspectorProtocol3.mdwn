Date: Sat, 17 Mar 2007 19:53:33 -0400
Mime-Version: 1.0 (Produced by PhpWiki 1.3.11p1)
Content-Type: multipart/mixed;
  boundary="=_multipart_boundary_55"

--=_multipart_boundary_55
Content-Type: application/x-phpwiki;
  pagename=InspectorProtocol3;
  flags="";
  author=MatthiasMelcher;
  version=2;
  lastmodified=1174175613;
  created=1174175613;
  author_id=MatthiasMelcher;
  markup=2;
  hits=50;
  charset=iso-8859-1
Content-Transfer-Encoding: binary

More explaining will follow, but for the sake of completeness, here is an object that makes a dialog pop up on the Newton screen if sent from the Inspector to the Toolbox:

<pre>
frame
    class: '~CodeBlock'
    instructions: binary block
        push 0  ; push the index number of the title string
        push 1  ; push the index number of the text content
        push 2  ; push the index number of the symbolic name
                ; of the function that we will call
        call 2  ; call the function with two arguments on the stack
        ret     ; return to "Toolkit"
    literals: array
        "Ntk2As"
        "Hello Newton."
        '~AlarmUser'
    end_array
    argFrame: frame
        _nextArgFrame: nil
        _parent: nil
        _implementor: nil
    end_frame
    numArgs: 0
    ~DebuggerInfo: nil
end_frame
</pre>

or in binary:

<pre>
  0x16, 0x10, 0x02 ; MNP4 header
  0x02, 0x04, 0xnn ; data block indicator an serial number
  0x6e, 0x65, 0x77, 0x74, ; 'newt'
  0x6e, 0x74, 0x70, 0x20, ; 'ntp '
  0x63, 0x6f, 0x64, 0x65, ; 'code'
  0xff, 0xff, 0xff, 0xff, ; -1
  0x00, 0x00, 0x00, 0x94, ; size of block
  ; what follows is the streming object format of the code above
  ; generating this code is explained in detail in "Newton Formats 1.1"
  ; which can be found as a PDF on UNNA
  0x02, 0x06, 0x06, 0x07, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x07, 0x0c, 0x69, 0x6e, 0x73, 0x74,
  0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x07, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
  0x6c, 0x73, 0x07, 0x08, 0x61, 0x72, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x07, 0x07, 0x6e, 0x75,
  0x6d, 0x41, 0x72, 0x67, 0x73, 0x07, 0x0c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x49,
  0x6e, 0x66, 0x6f, 0x07, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x03, 0x04,
  0x09, 0x02, 0x24, 0xa8, 0x70, 0x02, 0x04, 0x01, 0x09, 0x03, 0x07, 0x0a, 0x70, 0x72, 0x69, 0x6e,
  0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x06, 0x03, 0x07, 0x0d, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x41,
  0x72, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x07, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
  0x07, 0x0c, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x0a, 0x0a,
  0x0a, 0x00, 0x00, 0x0a,
  0x10, 0x03, ; footer
  0xcc, 0xcc  ; checksum
</pre>

--=_multipart_boundary_55
Content-Type: application/x-phpwiki;
  pagename=InspectorProtocol3;
  flags="";
  author=MatthiasMelcher;
  version=1;
  lastmodified=1174175527;
  created=1174175613;
  author_id=MatthiasMelcher;
  markup=2;
  hits=50;
  charset=iso-8859-1
Content-Transfer-Encoding: binary

More explaining will follow, but for the sake of completeness, here is an object that makes a dialog pop up on the Newton screen if sent from the Inspector to the Toolbox:

<pre>
frame
    class: 'CodeBlock'
    instructions: binary block
        push 0  ; push the index number of the title string
        push 1  ; push the index number of the text content
        push 2  ; push the index number of the symbolic name
                ; of the function that we will call
        call 2  ; call the function with two arguments on the stack
        ret     ; return to "Toolkit"
    literals: array
        "Ntk2As"
        "Hello Newton."
        'AlarmUser'
    end_array
    argFrame: frame
        _nextArgFrame: nil
        _parent: nil
        _implementor: nil
    end_frame
    numArgs: 0
    DebuggerInfo: nil
end_frame
</pre>

or in binary:

<pre>
  0x16, 0x10, 0x02 ; MNP4 header
  0x02, 0x04, 0xnn ; data block indicator an serial number
  0x6e, 0x65, 0x77, 0x74, ; 'newt'
  0x6e, 0x74, 0x70, 0x20, ; 'ntp '
  0x63, 0x6f, 0x64, 0x65, ; 'code'
  0xff, 0xff, 0xff, 0xff, ; -1
  0x00, 0x00, 0x00, 0x94, ; size of block
  ; what follows is the streming object format of the code above
  ; generating this code is explained in detail in "Newton Formats 1.1"
  ; which can be found as a PDF on UNNA
  0x02, 0x06, 0x06, 0x07, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x07, 0x0c, 0x69, 0x6e, 0x73, 0x74,
  0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x07, 0x08, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x61,
  0x6c, 0x73, 0x07, 0x08, 0x61, 0x72, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x07, 0x07, 0x6e, 0x75,
  0x6d, 0x41, 0x72, 0x67, 0x73, 0x07, 0x0c, 0x44, 0x65, 0x62, 0x75, 0x67, 0x67, 0x65, 0x72, 0x49,
  0x6e, 0x66, 0x6f, 0x07, 0x09, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x03, 0x04,
  0x09, 0x02, 0x24, 0xa8, 0x70, 0x02, 0x04, 0x01, 0x09, 0x03, 0x07, 0x0a, 0x70, 0x72, 0x69, 0x6e,
  0x74, 0x44, 0x65, 0x70, 0x74, 0x68, 0x06, 0x03, 0x07, 0x0d, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x41,
  0x72, 0x67, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x07, 0x07, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
  0x07, 0x0c, 0x5f, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x0a, 0x0a,
  0x0a, 0x00, 0x00, 0x0a,
  0x10, 0x03, ; footer
  0xcc, 0xcc  ; checksum
</pre>

--=_multipart_boundary_55--
